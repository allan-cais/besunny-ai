#!/bin/bash

# Railway Configuration Checker for BeSunny.ai
echo "üîç Checking Railway Configuration..."
echo "=================================="

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo ""
print_status "Frontend Service Configuration:"
echo "-------------------------------------"
echo "‚úÖ Builder: Nixpacks (default)"
echo "‚úÖ Build Command: npm install && npm run build:production"
echo "‚úÖ Start Command: npx serve -s dist -l \$PORT"
echo "‚úÖ Watch Paths: /src/**/*, /public/**/*, package.json, vite.config.ts, etc."

echo ""
print_status "Backend Service Configuration:"
echo "------------------------------------"
echo "‚úÖ Builder: Nixpacks (default)"
echo "‚úÖ Build Command: pip install -r requirements.txt"
echo "‚úÖ Start Command: cd backend && python start.py"
echo "‚úÖ Watch Paths: /backend/**/*, requirements.txt"

echo ""
print_status "Key Points:"
echo "-----------"
echo "1. Frontend uses 'npx serve' to serve static files"
echo "2. Backend uses 'cd backend && python start.py'"
echo "3. Both services use Nixpacks builder (Railway's default)"
echo "4. Railway automatically sets PORT environment variable"

echo ""
print_warning "Important Notes:"
echo "-------------------"
echo "‚Ä¢ Railway will automatically detect your project types"
echo "‚Ä¢ No need to change build/start commands unless you want to customize"
echo "‚Ä¢ The Dockerfiles we created are for local Docker builds only"
echo "‚Ä¢ Railway deployment uses your source code directly, not Docker images"

echo ""
print_success "Your Railway configuration is correct!"
echo "Just push your code and Railway will handle the rest."
